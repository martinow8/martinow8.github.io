<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<style>
    body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    background-color: #f0f2f5;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.shipping-form {
    background-color: #ffffff;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    width: 100%;
    max-width: 400px;
}

fieldset {
    border: 1px solid #dcdcdc;
    border-radius: 8px;
    padding: 20px;
    margin-bottom: 25px;
    margin-top:100px;
}

legend {
    font-weight: 600;
    font-size: 1.2em;
    color: #333;
    padding: 0 10px;
    margin-left: -10px;
}

.form-group {
    display: flex;
    flex-direction: column;
    margin-bottom: 15px;
}

label {
    margin-bottom: 5px;
    font-size: 0.9em;
    color: #555;
    font-weight: 500;
}

input[type="number"] {
    width: 100%;
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 5px;
    font-size: 1em;
    box-sizing: border-box; /* Ensures padding doesn't affect width */
    transition: border-color 0.3s ease;
}

input[type="number"]:focus {
    border-color: #007bff;
    outline: none;
}

button {
    width: 100%;
    padding: 12px;
    background-color: #007bff;
    color: #ffffff;
    border: none;
    border-radius: 5px;
    font-size: 1em;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.3s ease;
}

button:hover {
    background-color: #0056b3;
}

#open-product-page{
    position:absolute;
    top:20px;
    right:20px;
    width:200px;
}

#add-product-page{
    position:absolute;
    width:100%;
    height:100%;
    z-index:2;
    background-color:grey;
}
#close-add-product-modal{
    position:absolute;
    right:20px;
    top:20px;
    font-size:50px;
    width:70px;
    height:70px;    
    text-align: center;
    border-radius:10px;
    box-shadow:15px  grey;
}

#products-table{
    width:100%;
}

#products-table, #products-table tr,  #products-table tr th, #products-table tr td{
    border: 1px solid;
    border-collapse: collapse;
}

#product{
    width:50%;
    margin-left:50%;
    transform: translateX(-50%);
}

#result{
    white-space: pre-wrap;
}
</style>
<body>
<form action="" class="shipping-form">
    <fieldset>
        <legend>Truck Information</legend>
        <div class="form-group">
            <label for="truck-length">Truck Length</label>
            <input type="number" id="truck-length">
        </div>
        <div class="form-group">
            <label for="truck-width">Truck Width</label>
            <input type="number" id="truck-width">
        </div>
    </fieldset>
    



    <button type="button" id="calculate">Calculate</button>
            <div>
            <h4 id="truckLdm"></h4>
            <div id="result"></div>
        </div>

    <div id="products-list" hidden>
      <span><b>Products</b></span>
      <table id="products-table">
            <tr>
                <th>ID</th>
                <th>Length</th>
                <th>Width</th>
                <th></th>
            </tr>
      </table>
    </div>
</form>

<button id="open-product-page">Add product</button>

<div id="add-product-page" hidden>
  <button id="close-add-product-modal">X</button>
  <fieldset id="product">            
            <div class="form-group">
                <label for="product-length">Product Length</label>
                <input type="number" id="product-length">
            </div>
            <div class="form-group">
                <label for="product-width">Product Width</label>
                <input type="number" id="product-width">
            </div>
            <div class="form-group">
                <button id="add-product-button">Add product</button>
            </div>
        </fieldset>
</div>

</body>
<script>
    let productQuantity = 1; // used as ID of the products

    // get DOM elements
    let truckLengthElement = document.getElementById("truck-length");
    let truckWidthElement = document.getElementById("truck-width");
    let productLengthElement = document.getElementById("product-length");
    let productWidthElement = document.getElementById("product-width");
    let productsListElement = document.getElementById("products-list")
    let productsTableElement = document.getElementById("products-table");
    let calculateButton = document.getElementById("calculate");
    let truckLdmResult = document.getElementById("truckLdm");
    let resultElement = document.getElementById("result");
    let productsOrderedList = document.getElementById("products-ordered-list");
    let addProductButton = document.getElementById("add-product-button");
    let openProductPageButton = document.getElementById("open-product-page");
    let productPageElement = document.getElementById("add-product-page");
    let closeProductPageButton = document.getElementById("close-add-product-modal");

    
    productNumber = 0; // used as ID of the products
    products = {}; // store the products as object productId : {length: 1, width: 1}

    openProductPageButton.addEventListener("click", productPage);
    closeProductPageButton.addEventListener("click", productPage);
    addProductButton.addEventListener("click", addProduct);
    calculateButton.addEventListener("click", calculate)

    function calculate(){
        // validate input data
        if (Object.keys(products).length == 0){ 
            alert("Please enter product");
        } else if (truckLengthElement.value == "" || truckWidthElement.value == ""){
            alert("Please enter truck details");
        } else {
            let truckLength = truckLengthElement.value;
            let truckWidth = truckWidthElement.value;
            
            let ldm = 1 * truckWidth;
            let truckLdm = ldm * truckLength;
            let productSize = productLength * productWidth;

            let productLdm = productSize / ldm;

            productsResult = "";
            allProductsLdm = 0;

            for (var id of Object.keys(products)){
                let l = products[id].l;
                let w = products[id].w;
                let productSize = l*w;
                let productLdm = productSize / ldm;
                allProductsLdm += productLdm;
                productsResult += "Product " + id + ":  " + productLdm + " ldm \n";
            }

            ldmLeft = truckLdm - allProductsLdm;

            productsResult += "All products: " + allProductsLdm + " ldm \n";
            productsResult += "Left in truck: " + ldmLeft + " ldm";
            truckLdmResult.textContent = "Truck: " + truckLdm + " ldm";
            resultElement.textContent = productsResult;
        }
    }

    function productPage(){
        if (productPageElement.hidden == true){
            productPageElement.hidden = false;
        } else {
            productPageElement.hidden = true;
        }
    }
    
    function addProduct(){
        productWidth = productWidthElement.value;
        productWidthElement.value = "";
        productLength = productLengthElement.value;
        productLengthElement.value = "";
        productNumber++;
        products[productNumber] = {w: productWidth, l: productLength};
        console.log(products);
        addProductToTheTable(productNumber, productWidth, productLength);
    }

    function addProductToTheTable(id,w,l){
        tr = document.createElement("tr");
        tdId = document.createElement("td");
        tdL = document.createElement("td");
        tdW = document.createElement("td");
        tdDelete = document.createElement("td");
        tdDeleteButton = document.createElement("button");
        tdDeleteButton.type = "button";
        tdDeleteButton.textContent = "Delete";
        tdDeleteButton.addEventListener("click", deleteProductRow);
        tdDelete.appendChild(tdDeleteButton);

        tdId.textContent = id;
        tdL.textContent = l;
        tdW.textContent = w;
        tr.appendChild(tdId);
        tr.appendChild(tdL);
        tr.appendChild(tdW);
        tr.appendChild(tdDelete);

        productsTableElement.appendChild(tr);
        productPage();
        showHideProductsTable();
    }

    function deleteProductRow(){
        tableRow = this.parentNode.parentNode;
        //console.log(tableRow);
        id = tableRow.childNodes[0].textContent;
        //console.log(id);
        delete products[id];
        tableRow.remove();
        showHideProductsTable();
    }

    function showHideProductsTable(){
        Object.keys(products).length > 0 ? productsListElement.hidden=false : productsListElement.hidden=true;
    }
</script>
</html>
